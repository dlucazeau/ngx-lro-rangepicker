@import "imports";

.new-ribbon {
    position: absolute;
    border-radius: 7px;
    z-index: 10;
    top: 3px;
    right: 3px;
    padding: 2px 5px 2px 5px;
    @include aa-bold-label;
    @each $skin, $name in $skins {
        .#{$name} & {
            color: getSkinColor($skin, color-msg-primary-normal);
            background-color: getSkinColor($skin, color-msg-primary-light);
        }
    }
}

.new-ribbon-tab {
    position: relative;
    border-radius: 7px;
    z-index: 10;
    top: -12px;
    right: 6px;
    padding: 2px 5px 2px 5px;
    @include aa-bold-label;
    @each $skin, $name in $skins {
        .#{$name} & {
            color: getSkinColor($skin, color-msg-primary-normal);
            background-color: getSkinColor($skin, color-msg-primary-light);
        }
    }
}

/*!
 * "Fork me on GitHub" CSS ribbon v0.2.0 | MIT License
 * https://github.com/simonwhitaker/hot-new-ribbon-css
*/
.hot-new-ribbon {
    width: 12.1em;
    height: 12.1em;
    position: absolute;
    overflow: hidden;
    top: 0;
    right: 0;
    z-index: 9999;
    pointer-events: none;
    text-decoration: none;
    text-indent: -999999px;
    font-size: calc(#{$font-size-base} * 10 / 14);
    @each $skin, $name in $skins {
        .#{$name} & {
            color: getSkinColor($skin, color-login-background);
        }
    }
    &.fixed {
        position: fixed;
    }
    &:before,
    &:after {
        /* The right and left classes determine the side we attach our banner to */
        position: absolute;
        display: block;
        width: 15.38em;
        height: 1.54em;

        top: 1.1em; //3.23em;
        right: -6.23em; //-3.23em;

        -webkit-box-sizing: content-box;
        -moz-box-sizing: content-box;
        box-sizing: content-box;

        -webkit-transform: rotate(45deg);
        -moz-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        -o-transform: rotate(45deg);
        transform: rotate(45deg);
    }
    &:before {
        content: "";

        /* Add a bit of padding to give some substance outside the "stitching" */
        padding: 0.38em 0;

        /* Set the base colour */
        @each $skin, $name in $skins {
            @if map-has-key($config, $skin) {
                .#{$name} & {
                    background-color: getSkinColor($skin, color-white);
                }
            }
        }

        /* Set a gradient: transparent black at the top to almost-transparent black at the bottom */
        // background-image: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.15)));
        // background-image: -webkit-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
        // background-image: -moz-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
        // background-image: -ms-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
        // background-image: -o-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));
        // background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15));

        /* Add a drop shadow */
        // -webkit-box-shadow: 0 0.15em 0.23em 0 rgba(0, 0, 0, 0.5);
        // -moz-box-shadow: 0 0.15em 0.23em 0 rgba(0, 0, 0, 0.5);
        // box-shadow: 0 0.15em 0.23em 0 rgba(0, 0, 0, 0.5);
        @each $skin, $name in $skins {
            @if map-has-key($config, $skin) {
                .#{$name} & {
                    -webkit-box-shadow: 0
                        0.15em
                        0.23em
                        0
                        rgba(getSkinColor($skin, color-black), 0.5);
                    -moz-box-shadow: 0
                        0.15em
                        0.23em
                        0
                        rgba(getSkinColor($skin, color-black), 0.5);
                    box-shadow: 0
                        0.15em
                        0.23em
                        0
                        rgba(getSkinColor($skin, color-black), 0.5);
                }
            }
        }

        pointer-events: none;
    }
    &:after {
        /* Set the text from the title attribute */
        content: attr(title);

        /* Set the text properties */
        line-height: 1.54em;
        text-decoration: none;
        text-align: center;
        text-indent: 0;

        /* Set the layout properties */
        padding: 0.15em 0;
        margin: 0.15em 0;

        /* Add "stitching" effect */
        border-width: 0.08em 0;
        border-style: dotted;

        // border-color: #ffffff;
        // border-color: rgba(255, 255, 255, 0.7);
        @each $skin, $name in $skins {
            @if map-has-key($config, $skin) {
                .#{$name} & {
                    border-color: rgba(getSkinColor($skin, color-white), 0.7);
                }
            }
        }
    }
    &.left-top,
    &.left-bottom {
        right: auto;
        left: 0;
    }
    &.left-bottom,
    &.right-bottom {
        top: auto;
        bottom: 0;
    }

    &.left-top:before,
    &.left-top:after,
    &.left-bottom:before,
    &.left-bottom:after {
        right: auto;
        left: -6.1em;
    }

    &.left-bottom:before,
    &.left-bottom:after,
    &.right-bottom:before,
    &.right-bottom:after {
        top: auto;
        bottom: 3.23em;
    }

    &.left-top:before,
    &.left-top:after,
    &.right-bottom:before,
    &.right-bottom:after {
        -webkit-transform: rotate(-45deg);
        -moz-transform: rotate(-45deg);
        -ms-transform: rotate(-45deg);
        -o-transform: rotate(-45deg);
        transform: rotate(-45deg);
    }
}
